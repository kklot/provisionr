% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/package_sources.R
\name{package_sources}
\alias{package_sources}
\title{Collect information on package sources}
\usage{
package_sources(cran = NULL, repos = NULL, github = NULL,
  local = NULL, expire = NULL, local_drat = NULL, data = NULL,
  spec = NULL)
}
\arguments{
\item{cran}{A single URL for the CRAN repo to use.  If
\code{NULL}, then this will use the rstudio mirror.}

\item{repos}{A character vector of additional repositories to use.
Repositories of the form \code{drat://username} will be
translated to a drat repository hosted on github (e.g.,
\code{https://username.github.io/drat})}

\item{github}{A vector of github package specifications (e.g.,
username/password).  The full syntax as implemented in
\code{\link{parse_github_repo_spec}} is supported (packages in
subdirectories, or referencing a particular branch, commit or
tag).}

\item{local}{A character vector of local files to include.  Can be
directories or built packages (source or binary)}

\item{expire}{Optional period, in days, to expire the local copy
of the package.  If specified, then if a package was downloaded
more than\code{expire} days ago when the local copy is checked,
a new version will be downloaded.  Can be a fractional value
(e.g., \code{expire = 0.04} for an expiry of around an hour).}

\item{local_drat}{Optional location to cache downloaded packages,
when \code{github} or \code{local} packages are used.  If not
given, this can be set at any time by setting the
\code{local_drat} element of the returned element.  If not given
by the time that the packages need to be downloaded then a
session-specific temporary directory will be used.}

\item{data}{An object of class \code{package_sources_list},
created by running the \code{as_list()} method of a
\code{package_sources} object.  This is useful for serialisation
without saving references to \code{provisionr}.}

\item{spec}{Raw entries of the form \code{<type>::<user>/<repo>...}}
}
\description{
Collect information on package sources
}
